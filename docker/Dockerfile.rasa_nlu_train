# Dockerfile for RASA NLU Model Trainer image

# Official image: rasa/rasa:3.2.4-full
ARG BASE_IMAGE="python"
ARG BASE_IMAGE_HASH="3.9-slim-bullseye"
ARG BASE_BUILDER_IMAGE_HASH="3.9-slim-bullseye"

FROM ${BASE_IMAGE}:${BASE_BUILDER_IMAGE_HASH} AS builder

WORKDIR /app

COPY requirements/rasa-requirements.txt .

RUN python -m venv /opt/venv && \
    . /opt/venv/bin/activate && \
    pip install --upgrade pip && \
    pip install --no-cache-dir -U -r rasa-requirements.txt

# make sure we use the virtualenv
ENV PATH="/opt/venv/bin:$PATH"

# Install spacy dependencies
RUN python -m spacy download de_core_news_sm

# Start new build stage
FROM ${BASE_IMAGE}:${BASE_IMAGE_HASH} AS runner

WORKDIR /RASA

# copy everything from /opt
COPY --from=builder /opt/venv /opt/venv

# make sure we use the virtualenv
ENV PATH="/opt/venv/bin:$PATH"

# Copy RASA train data to container work dir
COPY ./RASA/data ./data
COPY ./RASA/domain ./domain
COPY ./RASA/config.yml ./

# set HOME environment variable
ENV HOME=/RASA

# Best Practices, Set user to run
USER 1001

# Set entrypoint for interactive shells
ENTRYPOINT ["rasa"]

CMD ["train", \
    "--fixed-model-name", "${NLU_MODEL}", \
    "--data", "RASA/data/", \
    "--config", "RASA/config.yml", \
    "--domain", "RASA/domain/", \
    "nlu"]